/*************************
	函数名：key_detect
	输入：无
	输出：无
	作用：检测按键是否按下并进行相应动作（轮询）
*************************/
//void key_detect(void)
//{
//	/****** 定义修改变量 ******/
//	u8 key_value;								//按键键值				
//	
//	/****** 获得键值 ******/
//	key_value = get_key_value(1);
//	
//	if(key_value == POWER && pressed_flag == false)			//按下电源键
//	{
//		if(menu == 1)
//			menu = 2;
//		else
//			menu = 1;
//		pressed_flag = true;
//	}
//	else
//	{
//		switch(menu)
//		{
//			case 1:
//				break;
//		}
//	}
//	/****** 清除按钮按下标志 ******/
//	pressed_flag = false;
//	
//	/****** 清除长按标志 ******/
//	long_press_flag = false;
//		long_press = 0;	
//}


/*************************
	函数名：get_key_value
	输入：mode 是否支持连按功能
	类型：u8
	
	输出：按键键值

	作用：检测按键（轮询）
*************************/
//u8 get_key_value(u8 mode)
//{	 
//	static u8 key_up = 1;									//按键按松开标志(只运行一次)
//	if(mode)key_up=1;  										//支持连按		  
//	if(key_up && (power_key == 0 || centre_key == 0 || 
//				right_key == 0 || left_key ==0 ||
//				down_key == 0 || up_key == 0))
//	{
//		delay_ms(7);									//消除按键抖动
//		key_up=0;
//		if(power_key == 0)			return 1;			//按下电源键
//		else if(centre_key == 0)	return 2;			//按下中键（停止键）
//		else if(left_key == 0)		return 3;			//按下左键
//		else if(right_key == 0)		return 4;			//按下右键
//		else if(up_key == 0)		return 5;			//按下上键
//		else if(down_key == 0)		return 6;			//按下下键
//	}
//	else if(power_key == 1 || centre_key == 1 || left_key == 1 ||
//				right_key==1 || up_key == 1 || down_key == 1)
//	key_up = 1; 	    
// 	return 0;			// 无按键按下
//}
